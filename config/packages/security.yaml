security:
  encoders:
    FOS\UserBundle\Model\UserInterface: bcrypt

  role_hierarchy:
    ROLE_USER: [ ROLE_USER ]
    ROLE_ADMIN: [ ROLE_ADMIN ]
    ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

  providers:
    fos_userbundle:
      id: fos_user.user_provider.username_email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    #    api: #lock API query
    #      pattern:   ^/api/
    #      stateless: true
    #      anonymous: true
    #      provider: fos_userbundle
    #      guard:
    #        authenticators:
    #          - lexik_jwt_authentication.jwt_token_authenticator
    main:
      pattern: ^/
      form_login:
        provider: fos_userbundle
        csrf_token_generator: security.csrf.token_manager
        use_referer: true
      #        success_handler: app.authentication_success_handler
      json_login:
        check_path: /authentication_token
        username_path: email
        password_path: pwd
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      logout: true
      anonymous: true
      switch_user: { role: ROLE_ADMIN, parameter: _switch_user }

  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    #    - { path: ^/account, roles: IS_AUTHENTICATED_ANONYMOUSLY } #to reset password
    #    - { path: ^/users, roles: IS_AUTHENTICATED_ANONYMOUSLY , methods: [POST] } #to create user
    #    - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/, role: ROLE_ADMIN }
#    - { path: ^/,      roles: IS_AUTHENTICATED_FULLY , methods: [POST, DELETE, OPTIONS, PUT, PATCH] }

